<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cooler.semantic.dao.LogDataCalculationMapper" >
  <resultMap id="BaseResultMap" type="com.cooler.semantic.entity.LogDataCalculation" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="process_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="algorithm_type" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="formula" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="formula_data" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, process_id, algorithm_type, formula, formula_data
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from log_data_calculation
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from log_data_calculation
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.cooler.semantic.entity.LogDataCalculation" >
    insert into log_data_calculation (id, process_id, algorithm_type, 
      formula, formula_data)
    values (#{id,jdbcType=INTEGER}, #{processId,jdbcType=INTEGER}, #{algorithmType,jdbcType=INTEGER}, 
      #{formula,jdbcType=VARCHAR}, #{formulaData,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.cooler.semantic.entity.LogDataCalculation" >
    insert into log_data_calculation
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="processId != null" >
        process_id,
      </if>
      <if test="algorithmType != null" >
        algorithm_type,
      </if>
      <if test="formula != null" >
        formula,
      </if>
      <if test="formulaData != null" >
        formula_data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="processId != null" >
        #{processId,jdbcType=INTEGER},
      </if>
      <if test="algorithmType != null" >
        #{algorithmType,jdbcType=INTEGER},
      </if>
      <if test="formula != null" >
        #{formula,jdbcType=VARCHAR},
      </if>
      <if test="formulaData != null" >
        #{formulaData,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cooler.semantic.entity.LogDataCalculation" >
    update log_data_calculation
    <set >
      <if test="processId != null" >
        process_id = #{processId,jdbcType=INTEGER},
      </if>
      <if test="algorithmType != null" >
        algorithm_type = #{algorithmType,jdbcType=INTEGER},
      </if>
      <if test="formula != null" >
        formula = #{formula,jdbcType=VARCHAR},
      </if>
      <if test="formulaData != null" >
        formula_data = #{formulaData,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cooler.semantic.entity.LogDataCalculation" >
    update log_data_calculation
    set process_id = #{processId,jdbcType=INTEGER},
      algorithm_type = #{algorithmType,jdbcType=INTEGER},
      formula = #{formula,jdbcType=VARCHAR},
      formula_data = #{formulaData,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
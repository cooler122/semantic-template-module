<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cooler.semantic.dao.AccountMapper" >
  <resultMap id="BaseResultMap" type="com.cooler.semantic.entity.Account" >
    <constructor >
      <idArg column="account_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="api_key" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="can_break_context" jdbcType="BIT" javaType="java.lang.Boolean" />
      <arg column="entity_max_query_count" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="context_wait_time" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="accuracy_threshold" jdbcType="DOUBLE" javaType="java.lang.Double" />
      <arg column="intent_rule_ingate_outgate" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="intent_rule_non_ingate_outgate" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="log_type" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="algorithm_type" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    account_id, api_key, can_break_context, entity_max_query_count, context_wait_time, 
    accuracy_threshold, intent_rule_ingate_outgate, intent_rule_non_ingate_outgate, log_type, 
    algorithm_type
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from account
    where account_id = #{accountId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from account
    where account_id = #{accountId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.cooler.semantic.entity.Account" >
    insert into account (account_id, api_key, can_break_context, 
      entity_max_query_count, context_wait_time, accuracy_threshold, 
      intent_rule_ingate_outgate, intent_rule_non_ingate_outgate, 
      log_type, algorithm_type)
    values (#{accountId,jdbcType=INTEGER}, #{apiKey,jdbcType=VARCHAR}, #{canBreakContext,jdbcType=BIT}, 
      #{entityMaxQueryCount,jdbcType=INTEGER}, #{contextWaitTime,jdbcType=INTEGER}, #{accuracyThreshold,jdbcType=DOUBLE}, 
      #{intentRuleIngateOutgate,jdbcType=INTEGER}, #{intentRuleNonIngateOutgate,jdbcType=INTEGER}, 
      #{logType,jdbcType=INTEGER}, #{algorithmType,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.cooler.semantic.entity.Account" >
    insert into account
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="accountId != null" >
        account_id,
      </if>
      <if test="apiKey != null" >
        api_key,
      </if>
      <if test="canBreakContext != null" >
        can_break_context,
      </if>
      <if test="entityMaxQueryCount != null" >
        entity_max_query_count,
      </if>
      <if test="contextWaitTime != null" >
        context_wait_time,
      </if>
      <if test="accuracyThreshold != null" >
        accuracy_threshold,
      </if>
      <if test="intentRuleIngateOutgate != null" >
        intent_rule_ingate_outgate,
      </if>
      <if test="intentRuleNonIngateOutgate != null" >
        intent_rule_non_ingate_outgate,
      </if>
      <if test="logType != null" >
        log_type,
      </if>
      <if test="algorithmType != null" >
        algorithm_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="accountId != null" >
        #{accountId,jdbcType=INTEGER},
      </if>
      <if test="apiKey != null" >
        #{apiKey,jdbcType=VARCHAR},
      </if>
      <if test="canBreakContext != null" >
        #{canBreakContext,jdbcType=BIT},
      </if>
      <if test="entityMaxQueryCount != null" >
        #{entityMaxQueryCount,jdbcType=INTEGER},
      </if>
      <if test="contextWaitTime != null" >
        #{contextWaitTime,jdbcType=INTEGER},
      </if>
      <if test="accuracyThreshold != null" >
        #{accuracyThreshold,jdbcType=DOUBLE},
      </if>
      <if test="intentRuleIngateOutgate != null" >
        #{intentRuleIngateOutgate,jdbcType=INTEGER},
      </if>
      <if test="intentRuleNonIngateOutgate != null" >
        #{intentRuleNonIngateOutgate,jdbcType=INTEGER},
      </if>
      <if test="logType != null" >
        #{logType,jdbcType=INTEGER},
      </if>
      <if test="algorithmType != null" >
        #{algorithmType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cooler.semantic.entity.Account" >
    update account
    <set >
      <if test="apiKey != null" >
        api_key = #{apiKey,jdbcType=VARCHAR},
      </if>
      <if test="canBreakContext != null" >
        can_break_context = #{canBreakContext,jdbcType=BIT},
      </if>
      <if test="entityMaxQueryCount != null" >
        entity_max_query_count = #{entityMaxQueryCount,jdbcType=INTEGER},
      </if>
      <if test="contextWaitTime != null" >
        context_wait_time = #{contextWaitTime,jdbcType=INTEGER},
      </if>
      <if test="accuracyThreshold != null" >
        accuracy_threshold = #{accuracyThreshold,jdbcType=DOUBLE},
      </if>
      <if test="intentRuleIngateOutgate != null" >
        intent_rule_ingate_outgate = #{intentRuleIngateOutgate,jdbcType=INTEGER},
      </if>
      <if test="intentRuleNonIngateOutgate != null" >
        intent_rule_non_ingate_outgate = #{intentRuleNonIngateOutgate,jdbcType=INTEGER},
      </if>
      <if test="logType != null" >
        log_type = #{logType,jdbcType=INTEGER},
      </if>
      <if test="algorithmType != null" >
        algorithm_type = #{algorithmType,jdbcType=INTEGER},
      </if>
    </set>
    where account_id = #{accountId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cooler.semantic.entity.Account" >
    update account
    set api_key = #{apiKey,jdbcType=VARCHAR},
      can_break_context = #{canBreakContext,jdbcType=BIT},
      entity_max_query_count = #{entityMaxQueryCount,jdbcType=INTEGER},
      context_wait_time = #{contextWaitTime,jdbcType=INTEGER},
      accuracy_threshold = #{accuracyThreshold,jdbcType=DOUBLE},
      intent_rule_ingate_outgate = #{intentRuleIngateOutgate,jdbcType=INTEGER},
      intent_rule_non_ingate_outgate = #{intentRuleNonIngateOutgate,jdbcType=INTEGER},
      log_type = #{logType,jdbcType=INTEGER},
      algorithm_type = #{algorithmType,jdbcType=INTEGER}
    where account_id = #{accountId,jdbcType=INTEGER}
  </update>
</mapper>
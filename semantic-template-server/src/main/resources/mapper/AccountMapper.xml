<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cooler.semantic.dao.AccountMapper" >
  <resultMap id="BaseResultMap" type="com.cooler.semantic.entity.Account" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="account_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="account_owner" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="user_count" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="password_md5" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="state" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, account_name, account_owner, user_count, password_md5, state
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from account
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from account
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.cooler.semantic.entity.Account" >
    insert into account (id, account_name, account_owner, 
      user_count, password_md5, state
      )
    values (#{id,jdbcType=INTEGER}, #{accountName,jdbcType=VARCHAR}, #{accountOwner,jdbcType=VARCHAR}, 
      #{userCount,jdbcType=INTEGER}, #{passwordMd5,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.cooler.semantic.entity.Account" >
    insert into account
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="accountName != null" >
        account_name,
      </if>
      <if test="accountOwner != null" >
        account_owner,
      </if>
      <if test="userCount != null" >
        user_count,
      </if>
      <if test="passwordMd5 != null" >
        password_md5,
      </if>
      <if test="state != null" >
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="accountName != null" >
        #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="accountOwner != null" >
        #{accountOwner,jdbcType=VARCHAR},
      </if>
      <if test="userCount != null" >
        #{userCount,jdbcType=INTEGER},
      </if>
      <if test="passwordMd5 != null" >
        #{passwordMd5,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cooler.semantic.entity.Account" >
    update account
    <set >
      <if test="accountName != null" >
        account_name = #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="accountOwner != null" >
        account_owner = #{accountOwner,jdbcType=VARCHAR},
      </if>
      <if test="userCount != null" >
        user_count = #{userCount,jdbcType=INTEGER},
      </if>
      <if test="passwordMd5 != null" >
        password_md5 = #{passwordMd5,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cooler.semantic.entity.Account" >
    update account
    set account_name = #{accountName,jdbcType=VARCHAR},
      account_owner = #{accountOwner,jdbcType=VARCHAR},
      user_count = #{userCount,jdbcType=INTEGER},
      password_md5 = #{passwordMd5,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cooler.semantic.dao.RuleMapper" >

  <resultMap id="BaseResultMap" type="com.cooler.semantic.entity.Rule" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="rule_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="intent_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="sence_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="account_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="original_sentence" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="rule_template" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="rule_msg" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="state" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>

  <sql id="Base_Column_List" >
    id, rule_name, intent_id, sence_id, account_id, original_sentence, rule_template, 
    rule_msg, state, create_time, update_time
  </sql>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from rule
    where id = #{id,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from rule
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.cooler.semantic.entity.Rule" >
    insert into rule (id, rule_name, intent_id, 
      sence_id, account_id, original_sentence, 
      rule_template, rule_msg, state, 
      create_time, update_time)
    values (#{id,jdbcType=INTEGER}, #{ruleName,jdbcType=VARCHAR}, #{intentId,jdbcType=INTEGER}, 
      #{senceId,jdbcType=INTEGER}, #{accountId,jdbcType=INTEGER}, #{originalSentence,jdbcType=VARCHAR}, 
      #{ruleTemplate,jdbcType=VARCHAR}, #{ruleMsg,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>

  <insert id="insertSelective" parameterType="com.cooler.semantic.entity.Rule" >
    insert into rule
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="ruleName != null" >
        rule_name,
      </if>
      <if test="intentId != null" >
        intent_id,
      </if>
      <if test="senceId != null" >
        sence_id,
      </if>
      <if test="accountId != null" >
        account_id,
      </if>
      <if test="originalSentence != null" >
        original_sentence,
      </if>
      <if test="ruleTemplate != null" >
        rule_template,
      </if>
      <if test="ruleMsg != null" >
        rule_msg,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="ruleName != null" >
        #{ruleName,jdbcType=VARCHAR},
      </if>
      <if test="intentId != null" >
        #{intentId,jdbcType=INTEGER},
      </if>
      <if test="senceId != null" >
        #{senceId,jdbcType=INTEGER},
      </if>
      <if test="accountId != null" >
        #{accountId,jdbcType=INTEGER},
      </if>
      <if test="originalSentence != null" >
        #{originalSentence,jdbcType=VARCHAR},
      </if>
      <if test="ruleTemplate != null" >
        #{ruleTemplate,jdbcType=VARCHAR},
      </if>
      <if test="ruleMsg != null" >
        #{ruleMsg,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.cooler.semantic.entity.Rule" >
    update rule
    <set >
      <if test="ruleName != null" >
        rule_name = #{ruleName,jdbcType=VARCHAR},
      </if>
      <if test="intentId != null" >
        intent_id = #{intentId,jdbcType=INTEGER},
      </if>
      <if test="senceId != null" >
        sence_id = #{senceId,jdbcType=INTEGER},
      </if>
      <if test="accountId != null" >
        account_id = #{accountId,jdbcType=INTEGER},
      </if>
      <if test="originalSentence != null" >
        original_sentence = #{originalSentence,jdbcType=VARCHAR},
      </if>
      <if test="ruleTemplate != null" >
        rule_template = #{ruleTemplate,jdbcType=VARCHAR},
      </if>
      <if test="ruleMsg != null" >
        rule_msg = #{ruleMsg,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.cooler.semantic.entity.Rule" >
    update rule
    set rule_name = #{ruleName,jdbcType=VARCHAR},
      intent_id = #{intentId,jdbcType=INTEGER},
      sence_id = #{senceId,jdbcType=INTEGER},
      account_id = #{accountId,jdbcType=INTEGER},
      original_sentence = #{originalSentence,jdbcType=VARCHAR},
      rule_template = #{ruleTemplate,jdbcType=VARCHAR},
      rule_msg = #{ruleMsg,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

</mapper>
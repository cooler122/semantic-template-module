<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cooler.semantic.dao.ReferRuleRelationMapper" >

  <resultMap id="BaseResultMap" type="com.cooler.semantic.entity.ReferRuleRelation" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="rule_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="rule_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="refer_rule_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="refer_rule_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="has_conditions" jdbcType="TINYINT" javaType="java.lang.Byte" />
      <arg column="state" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>

  <sql id="Base_Column_List" >
    id, rule_id, rule_name, refer_rule_id, refer_rule_name, has_conditions, state
  </sql>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from refer_rule_relation
    where id = #{id,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from refer_rule_relation
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.cooler.semantic.entity.ReferRuleRelation" >
    insert into refer_rule_relation (id, rule_id, rule_name, 
      refer_rule_id, refer_rule_name, has_conditions, 
      state)
    values (#{id,jdbcType=INTEGER}, #{ruleId,jdbcType=INTEGER}, #{ruleName,jdbcType=VARCHAR}, 
      #{referRuleId,jdbcType=INTEGER}, #{referRuleName,jdbcType=VARCHAR}, #{hasConditions,jdbcType=TINYINT}, 
      #{state,jdbcType=INTEGER})
  </insert>

  <insert id="insertSelective" parameterType="com.cooler.semantic.entity.ReferRuleRelation" >
    insert into refer_rule_relation
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="ruleId != null" >
        rule_id,
      </if>
      <if test="ruleName != null" >
        rule_name,
      </if>
      <if test="referRuleId != null" >
        refer_rule_id,
      </if>
      <if test="referRuleName != null" >
        refer_rule_name,
      </if>
      <if test="hasConditions != null" >
        has_conditions,
      </if>
      <if test="state != null" >
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="ruleId != null" >
        #{ruleId,jdbcType=INTEGER},
      </if>
      <if test="ruleName != null" >
        #{ruleName,jdbcType=VARCHAR},
      </if>
      <if test="referRuleId != null" >
        #{referRuleId,jdbcType=INTEGER},
      </if>
      <if test="referRuleName != null" >
        #{referRuleName,jdbcType=VARCHAR},
      </if>
      <if test="hasConditions != null" >
        #{hasConditions,jdbcType=TINYINT},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.cooler.semantic.entity.ReferRuleRelation" >
    update refer_rule_relation
    <set >
      <if test="ruleId != null" >
        rule_id = #{ruleId,jdbcType=INTEGER},
      </if>
      <if test="ruleName != null" >
        rule_name = #{ruleName,jdbcType=VARCHAR},
      </if>
      <if test="referRuleId != null" >
        refer_rule_id = #{referRuleId,jdbcType=INTEGER},
      </if>
      <if test="referRuleName != null" >
        refer_rule_name = #{referRuleName,jdbcType=VARCHAR},
      </if>
      <if test="hasConditions != null" >
        has_conditions = #{hasConditions,jdbcType=TINYINT},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.cooler.semantic.entity.ReferRuleRelation" >
    update refer_rule_relation
    set rule_id = #{ruleId,jdbcType=INTEGER},
      rule_name = #{ruleName,jdbcType=VARCHAR},
      refer_rule_id = #{referRuleId,jdbcType=INTEGER},
      refer_rule_name = #{referRuleName,jdbcType=VARCHAR},
      has_conditions = #{hasConditions,jdbcType=TINYINT},
      state = #{state,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

</mapper>